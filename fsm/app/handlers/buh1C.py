from aiogram import Dispatcher, types
# –ò–º–ø–æ—Ä—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
import re
# –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫ –¥–ª—è –±–æ—Ç–∞
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
from fsm.app.config_reader import load_config
from aiogram.types import ParseMode
# –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
config = load_config("config/bot.ini")
# –ü–æ–ª—É—á–µ–Ω–∏–µ id –∞–¥–º–∏–Ω –≥—Ä—É–ø–ø—ã
admin_group_id = int(config.tg_bot.admin_group_id)

# –î–∞–Ω–Ω—ã–µ –ø–æ 1—Å
# –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è 1—Å
regexp_1c = '(\W|^).*1—Å.*–∑–∞–≤–∏—Å.*(\W|$)|(\W|^).*–∑–∞–≤–∏—Å.*1—Å(\W|$)|(\W|^).*–Ω–µ\s—Ä–∞–±–æ—Ç.*1—Å(\W|$)|(\W|^).*1—Å.*–Ω–µ\s—Ä–∞–±–æ—Ç.*(\W|$)' \
            '|(\W|^).*1—Å.*–≤–µ—Å–∏—Ç(\W|$)|(\W|^).*1—Å.*–≤–∏—Å–∏—Ç.*(\W|$)|(\W|^).*–≤–µ—Å–∏—Ç.*1—Å(\W|$)|(\W|^).*–≤–∏—Å–∏—Ç.*1—Å(\W|$)|(\W|^).*1—Å.*–ø–æ—á–∏–Ω.*(\W|$)|(\W|^).*–ø–æ—á–∏–Ω.*1—Å(\W|$)'
# –°–ø–∏—Å–æ–∫ –ø—Ä–æ–±–ª–µ–º —Å 1—Å
available_buh_1C_problems = ["–ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç/–∑–∞–≤–∏—Å 1–°", "–î—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å 1–°"]
# –î—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
other_functions = "<i>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:</i> \n" \
                  "<b>–ê–ò–°, –ü–ö –ü–í–î, 1C, –û—á–µ—Ä–µ–¥—å</b> \n" \
                  "/ais - üñ•Ô∏è –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ê–ò–° \n" \
                  "/pkpvd - üìã –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ü–ö –ü–í–î \n" \
                  "/1c - üìö –≤–æ–ø—Ä–æ—Å—ã –ø–æ 1C \n" \
                  "/queue - ‚è≥ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ \n" \
                  "<b>–¢–µ—Ö–Ω–∏–∫–∞ –∏ –¥—Ä—É–≥–æ–µ</b> \n" \
                  "/printer - üñ®Ô∏è –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø—Ä–∏–Ω—Ç–µ—Ä—É \n" \
                  "/cancel - üö´ –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ "
# –ö–ª–∞—Å—Å –¥–ª—è 1—Å
class OrderBuh1C(StatesGroup):
    waiting_for_buh_1C_problem = State()
    waiting_for_other_buh_1C_problem = State()

# –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å 1—Å
async def buh_1C_start(message: types.Message):
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –ø–æ 1—Å
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True).row(*available_buh_1C_problems)
    # for name in available_buh_1C_problems:
    #     keyboard.add(name)
    # –ë–æ—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º—É —Å 1—Å
    await message.answer("üìö –ö–∞–∫–∞—è —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º–∞ —Å 1–°? ", reply_markup=keyboard)
    # –ë–æ—Ç –æ–∂–∏–¥–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø—Ä–æ–±–ª–µ–º–æ–π 1—Å
    await OrderBuh1C.waiting_for_buh_1C_problem.set()

# –í—ã–±–æ—Ä –ø—Ä–æ–±–ª–µ–º—ã —Å 1—Å
async def buh_1C_problem_chosen(message: types.Message, state: FSMContext):
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç —Å –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ —Å–æ–≤–ø–∞–ª–æ —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏
    if message.text in available_buh_1C_problems or re.match(regexp_1c, message.text.lower()):
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –¥—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å 1—Å
        if message.text == available_buh_1C_problems[len(available_buh_1C_problems) - 1]:
            # –ó–∞–ø–∏—Å–∞—Ç—å –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            await state.update_data(chosen_buh_1C_problem=message.text.lower())
            # –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –æ–ø–∏—Å–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å 1—Å
            await message.answer("‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É —Å 1–°. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª –∏–ª–∏ —Ñ–æ—Ç–æ —Å –ø—Ä–æ–±–ª–µ–º–æ–π.",
                                 reply_markup=types.ReplyKeyboardRemove())
            # –ë–æ—Ç –æ–∂–∏–¥–∞–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ–±–ª–µ–º—ã
            await OrderBuh1C.waiting_for_other_buh_1C_problem.set()
        # –ò–Ω–∞—á–µ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç —Å –∑–∞–≤–∏—Å–∞–Ω–∏–µ–º 1—Å
        else:
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            await state.update_data(chosen_buh_1C_server_problem=message.text.lower())
            # –ë–æ—Ç —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä 1—Å –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω
            await message.answer("‚ö† –°–µ—Ä–≤–µ—Ä 1–° –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 5 –º–∏–Ω—É—Ç...",
                                 reply_markup=types.ReplyKeyboardRemove())
            # –ë–æ—Ç —Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
            user_data = await state.get_data()
            # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
            answer_to_group = f"üìö ‚ö† –ü—Ä–æ–±–ª–µ–º–∞ —Å 1–°: {user_data['chosen_buh_1C_server_problem'].lower()}"
            # –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
            await message.answer(other_functions, reply_markup=types.ReplyKeyboardRemove(), parse_mode=ParseMode.HTML)
            # –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
            await message.bot.send_message(admin_group_id, answer_to_group)
            # –ë–æ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await message.forward(admin_group_id)
            # –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            await state.finish()
    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ —Å –∫–Ω–æ–ø–∫–∏, –∏–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–ª–æ —Å —Ä–µ–≥—É–ª—è—Ä–Ω—ã–º–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è–º–∏
    elif message.text not in available_buh_1C_problems:
        # –ë–æ—Ç —Å–æ–æ–±—â–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        await message.answer("‚ö† –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∏–∂–µ. ‚ö†")
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Å –ø—Ä–æ–±–ª–µ–º–∞–º–∏ 1—Å
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True).row(*available_buh_1C_problems)
        # –ë–æ—Ç —Å–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø—Ä–æ –ø—Ä–æ–±–ª–µ–º—É —Å 1—Å
        await message.answer("üìö –ö–∞–∫–∞—è —É –≤–∞—Å –ø—Ä–æ–±–ª–µ–º–∞ —Å 1–°? ", reply_markup=keyboard)
        return

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å 1—Å
async def buh_1C_other_problem_chosen(message: types.Message, state: FSMContext):
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª –¥–æ–∫—É–º–µ–Ω—Ç
    if message.content_type == 'document':
        # –û—Ç–≤–µ—Ç –≤ –≥—Ä—É–ø–ø—É
        answer_to_group = f"üìö ‚ö† –ü—Ä–æ–±–ª–µ–º–∞ —Å 1–°..."
        # –ë–æ—Ç —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ –≤—ã—Å–ª–∞–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ it-–æ—Ç–¥–µ–ª
        await message.reply('–í—ã—Å–ª–∞–ª IT-–æ—Ç–¥–µ–ª—É', reply_markup=types.ReplyKeyboardRemove())
        # –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        await message.answer(other_functions, reply_markup=types.ReplyKeyboardRemove(), parse_mode=ParseMode.HTML)
        # –ë–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
        await message.bot.send_message(admin_group_id, answer_to_group)
        # –ë–æ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.forward(admin_group_id)
        # –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.finish()
        # msg_document = message.document.file_id
        # print("msg doc "+msg_document)
        # await message.bot.send_document(admin_group_id, msg_document)
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é
    elif message.content_type == 'photo':
        # –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
        answer_to_group = f"üìö ‚ö† –ü—Ä–æ–±–ª–µ–º–∞ —Å 1–°..."
        # –ë–æ—Ç —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ –≤—ã—Å–ª–∞–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ it-–æ—Ç–¥–µ–ª
        await message.reply('–í—ã—Å–ª–∞–ª IT-–æ—Ç–¥–µ–ª—É', reply_markup=types.ReplyKeyboardRemove())
        # –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        await message.answer(other_functions, reply_markup=types.ReplyKeyboardRemove(), parse_mode=ParseMode.HTML)
        # –ë–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
        await message.bot.send_message(admin_group_id, answer_to_group)
        # –ë–æ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.forward(admin_group_id)
        # –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.finish()
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    elif message.content_type == 'text':
        # –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        await state.update_data(chosen_buh_1C_problem=message.text.lower())
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞
        user_data = await state.get_data()
        # –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞
        answer_to_message = f"‚ö† –£ –≤–∞—Å —Ç–µ–∫—É—â–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å 1–°: {user_data['chosen_buh_1C_problem'].lower()} \n IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏..."
        # –û—Ç–≤–µ—Ç –≤ –≥—Ä—É–ø–ø—É
        answer_to_group = f"üìö ‚ö† –ü—Ä–æ–±–ª–µ–º–∞ —Å 1–°: {user_data['chosen_buh_1C_problem'].lower()}"
        # –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.reply(answer_to_message, reply_markup=types.ReplyKeyboardRemove())
        # –ë–æ—Ç –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
        await message.answer(other_functions, reply_markup=types.ReplyKeyboardRemove(), parse_mode=ParseMode.HTML)
        # –ë–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É
        await message.bot.send_message(admin_group_id, answer_to_group)
        # –ë–æ—Ç –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.forward(admin_group_id)
        # –ë–æ—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        await state.finish()

# –•—ç–Ω–¥–ª–µ—Ä—ã –¥–ª—è –ø—Ä–æ–±–ª–µ–º —Å 1—Å
def register_handlers_buh_1C(dp: Dispatcher):
    # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã —Å 1—Å
    dp.register_message_handler(buh_1C_start, commands="1c", state="*")
    # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–æ–±–ª–µ–º —Å 1—Å
    dp.register_message_handler(buh_1C_problem_chosen, state=OrderBuh1C.waiting_for_buh_1C_problem)
    # –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å 1—Å
    dp.register_message_handler(buh_1C_other_problem_chosen, content_types=types.ContentType.all(), state=OrderBuh1C.waiting_for_other_buh_1C_problem)
    # –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Å –≤—ã–±–æ—Ä–æ–º –ø—Ä–æ–±–ª–µ–º —Å 1—Å
    dp.register_message_handler(buh_1C_problem_chosen, regexp=regexp_1c, state="*")
    # –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ —Å 1—Å
    dp.register_message_handler(buh_1C_start, regexp="(\W|^)1c.*(\W|$)|(\W|^)1—Å.*(\W|$)|(\W|^)–æ–¥–∏–Ω\s.—Å.*(\W|$)|(\W|^)1\s.—Å.*(\W|$)", state="*")

