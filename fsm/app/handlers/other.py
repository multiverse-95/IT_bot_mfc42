from aiogram import Dispatcher, types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from fsm.app.config_reader import load_config
from aiogram.types import ParseMode

config = load_config("config/bot.ini")
admin_group_id = int(config.tg_bot.admin_group_id)

html_text = "<b>–î–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n" \
                "/start - üîë –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ \n" \
                "/help - ‚ùì –ø–æ–º–æ—â—å –ø–æ –±–æ—Ç—É \n" \
                "<b>–ê–ò–°, –ü–ö –ü–í–î, 1C, –û—á–µ—Ä–µ–¥—å</b> \n" \
                "/ais - üñ•Ô∏è –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ê–ò–° \n" \
                "/pkpvd - üìã –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ü–ö –ü–í–î \n" \
                "/1c - üìö –≤–æ–ø—Ä–æ—Å—ã –ø–æ 1C \n" \
                "/queue - ‚è≥ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –æ—á–µ—Ä–µ–¥–∏ \n" \
                "<b>–¢–µ—Ö–Ω–∏–∫–∞ –∏ –¥—Ä—É–≥–æ–µ</b> \n" \
                "/printer - üñ®Ô∏è –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø—Ä–∏–Ω—Ç–µ—Ä—É \n" \
                "/cancel - üö´ –æ—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ "

class OtherCommands(StatesGroup):
    waiting_for_unknown_command = State()


async def unknown_comand(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("‚ùå <b>–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å...</b>", parse_mode=ParseMode.HTML)
    await message.answer(html_text, reply_markup=types.ReplyKeyboardRemove(), parse_mode=ParseMode.HTML)



def register_handlers_other_commands(dp: Dispatcher):
    dp.register_message_handler(unknown_comand, regexp=".*", state="*")
